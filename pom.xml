<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>


	<groupId>net.uvavru.maven.plugin</groupId>
	<artifactId>jetty-conf-maven-plugin</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>

	<name>jetty-conf-maven-plugin Maven Mojo</name>
	<url>http://maven.apache.org</url>


	<properties>
		<mavenFilteringVersion>1.0</mavenFilteringVersion>
	</properties>
	
	<description>
		
		Jetty context XML configuration plugin generator helper.
		
		
		This plugin helps you to generate your Context XML file with a dynamic content such as:
			* classpath entries
			* web app resources
			* maven properties
			
		Plugin needs a template Jetty context XML file where the dynamic content is injected.
		
		Injection of dynamic content is supported as:
			* altering the DOM with new values
			* with enabled filtering dynamic values can be replaced as properties (see bellow)
		
		Filtering of the template file is supported. 
		Basically it means you can include content from your maven properties in your context XML file.
		
		If desired plugin sets two maven properties with the dynamic content:
			* jetty.conf-plugin.classpath
			* jetty.conf-plugin.webapp
		These properties might be used for filtering as well.
		

		Plugin resolves project dependency artifacts. 
		These artifacts are transformed into webapp resources and classpath entries.
		
		
		Works with multi-module projects.
		Works in Eclipse with enabled m2e.
		 		
	</description>

	<dependencies>
	
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>3.0.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-filtering</artifactId>
			<version>${mavenFilteringVersion}</version>
		</dependency>

	</dependencies>
</project>
